# 机场订阅通用设置
dy: &dy
    type: http
    udp: true
    interval: 86400
    proxy: direct
    health-check:
      enable: false
      url: https://cp.cloudflare.com/generate_204
      interval: 1800
      timeout: 5 # 秒
      lazy: true
      expected-status: "204"
      method: HEAD
# ⚠️ smux 多路复用：部分机场不支持，如连接失败请注释本段
    smux: # smux（连接复用，提升多路复用效率，减少握手）
      enabled: true # 开启 smux 多路复用
      padding: true # 增加随机数据，防探测（推荐开）
      protocol: smux # 或 smux4

u: &u #总订阅引用
  use:
    - 1.p1
    - 2.p2
    - 3.p3
    - 4.p4

u_s: &u_s #其他订阅分组
  use:
    - 2.p2
    - 3.p3
    - 4.p4

proxy-providers:
  1.p1:
    url: ""
    path: ./proxy_provider/p1.yaml 
    <<: *dy
    lazy: true
    override:
      additional-prefix: "p1 |"

  2.p2:
    url: ""
    path: ./proxy_provider/p2.yaml
    <<: *dy
    lazy: true
    override:
      additional-prefix: "p2 |"

  3.p3: 
    url: ""
    path: ./proxy_provider/p3.yaml 
    <<: *dy
    lazy: true
    override:
      additional-prefix: "p3 |"

  4.p4: 
    url: ""
    path: ./proxy_provider/p4.yaml 
    <<: *dy
    lazy: true
    override:
      additional-prefix: "p4 |"

# ========== 节点信息 ==========
proxies:
  - {name: DIRECTLY, type: direct, udp: true}
#  - {name: 家宽, type: http, server: "家庭宽带节点的IP地址", port: 1080, udp: true}
#  - {name: 中转节点, type: socks5, server: "中转节点的IP地址", port: 1080}
#   - {name: 落地节点, type: http, server: "落地节点的IP地址", port: 1080}

# ========== 全局配置 ==========
port: 7890
socks-port: 7891     # SOCKS5 代理端口
redir-port: 7892     # 透明代理端口，用于 Linux 和 MacOS
mixed-port: 7893     # HTTP(S) 和 SOCKS 代理混合端口
tproxy-port: 7894
allow-lan: true     # 允许局域网连接
mode: rule
bind-address: "*"    # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址
ipv6: false
unified-delay: true  # 更换延迟计算方式，去除握手等额外延迟
tcp-concurrent: true # 启用 TCP 并发连接。这允许 Clash 同时建立多个 TCP 连接，可以提高网络性能和连接速度
log-level: warn      # 查东西时改成info
find-process-mode: 'strict' # 设置进程查找模式为严格模式，Clash 会更精确地识别和匹配网络流量来源的进程
global-client-fingerprint: chrome  # 设置全局客户端指纹为 Chrome，使 Clash 在建立连接时模拟 Chrome 浏览器的 TLS 指纹，增强隐私性和绕过某些网站的指纹检测
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false

profile:
  store-selected: true # 记忆选择
  store-fake-ip: true

# GEO数据库
geodata-mode: true
geodata-loader: memconservative
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.metadb"

# 控制面板
external-controller: 127.0.0.1:9090
secret: "123465."
external-ui: "./ui"
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
# 注释用于安卓优化
#    QUIC: #如你无使用 QUIC 的应用（如部分 YouTube CDN），可移除 QUIC 项。
#      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"
    - "+.bilibili.com"

# 入站  
tun:
  enable: true
  stack: mixed    # system/gvisor/mixed
  auto-route: true
  auto-redirect: true
  auto-detect-interface: false
  strict-route: false                # 避免冗余路由污染系统表
  dns-hijack: 
    - any:53
#    - tcp://any:53 #注释用于安卓优化
  mtu: 1500                         # 减少 MTU 问题，如网页无法打开、测速慢
  gso: true                         # 启用通用分段卸载（提升性能）
  gso-max-size: 65536
  udp-timeout: 300                 # UDP 会话保持时间

# DNS模块
dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:1053
  prefer-h3: true        # 如果DNS服务器支持DoH3会优先使用h3，提升性能
  respect-rules: true    # 让 DNS 解析遵循 Clash 的路由规则
  enhanced-mode: fake-ip # 设置增强模式为 fake-ip 模式，提高解析速度和连接性能
  cache-algorithm: arc   # 使用性能更优的 ARC 缓存算法
  use-hosts: false        # 使用hosts
  use-system-hosts: false # 使用系统hosts
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "geosite:connectivity-check"
    - "geosite:private"
    - "rule-set:fake_ip_filter_DustinWin"
    - "rule-set:fake_ip_filter_juewuy"
    - "*"

  default-nameserver:
    - 223.5.5.5                 # 阿里（国内）
    - 119.29.29.29              # 腾讯（国内）
    - system                    # 系统 DNS
#    - 8.8.8.8                   # Google（备用）

  proxy-server-nameserver:      # 当请求通过代理（即国外站）时使用
    - https://1.1.1.1/dns-query            # Cloudflare，DoH3
    - https://dns.google/dns-query         # Google，DoH3
    - 1.1.1.1
    - 8.8.8.8

  nameserver:                   # 默认 DNS，供所有请求使用，支持 DoH3 的在前面
    - https://1.1.1.1/dns-query             # Cloudflare（支持 H3）
    - https://dns.google/dns-query          # Google（支持 H3）
    - https://dns.alidns.com/dns-query      # 阿里（国内稳定）
    - https://223.5.5.5/dns-query           

  nameserver-policy:
    "geosite:cn,private":                # 国内域名和私有域名强制走国内 DNS
      - https://223.5.5.5/dns-query      # 阿里
      - https://doh.pub/dns-query        # 腾讯
    "geo:cn": # 也可以用 geo:cn 匹配 IP
      - https://223.5.5.5/dns-query

  fallback: 
    - https://cloudflare-dns.com/dns-query # Cloudflare DNS备用
    - https://dns.google/dns-query         # Google DNS备用
    - 1.1.1.1
    - 8.8.8.8

# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pg: &pg 
    type: select
    proxies: 
      - Device-Proxy
      - Proxy
      - 香港故转
      - 美国故转
      - 香港均衡加速
      - 美国均衡加速
      - 香港自动
      - 美国自动
      - 自动选择
      - 香港节点
      - 日本节点
      - 美国节点
      - 全部节点
      - DIRECTLY

# 🧪 高阶智能分组模板（RTT + LOSS 容错 + 平滑流量）
rtt-fallback-template: &rtt-fb
  type: fallback
  <<: *u_s
  lazy: true
  interval: 600
  max-failed-times: 3
  tolerance: 100

rtt-balance-template: &rtt-lb
  type: load-balance
  <<: *u_s
  lazy: true
  interval: 900
  strategy: round-robin
  max-failed-times: 3

# 代理组
proxy-groups:
#  - name: 家宽链式代理
#    type: select
#    proxies:
#      - 家宽
#      - 中转节点
#      - 落地节点
#      - DIRECTLY

  - name: Device-Proxy
    type: select
    proxies:
      - 香港均衡加速
      - 美国均衡加速
      - 香港故转
      - 美国故转
      - DIRECTLY
    icon: "https://static.thenounproject.com/png/165980-200.png"
    filter: "(?i)^(?=.*(?:mac|android)).*$"

  - name: Proxy
    type: select
    proxies: 
      - Device-Proxy
      - 香港均衡加速
      - 美国均衡加速
      - 香港故转
      - 美国故转
      - 香港自动
      - 美国自动
      - 自动选择
      - 香港节点
      - 日本节点
      - 美国节点
      - 全部节点
      - DIRECTLY
    icon: "https://rules.vlo.cc/icon/manual.svg" 

  - name: Telegram
    type: select
    proxies:
      - Device-Proxy
      - 香港均衡加速
      - 美国均衡加速
    icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Telegram.png"

  - name: AI
    type: load-balance
    strategy: consistent-hashing
    proxies: 
      - 美国均衡加速
      - 美国故转
#    filter: "(?i)(ai|chatgpt|openai|claude|gpt|stability|huggingface|vertex|bard|gemini)"
    icon: "https://github.com/DustinWin/ruleset_geodata/releases/download/icons/ai.png" 
    lazy: true
    interval: 900
    max-failed-times: 3

  # 🧪 高阶智能均衡测速组（支持 RTT+轮询，Android / macOS 均兼容）
  - { name: 香港均衡加速, <<: *rtt-lb, filter: "(?i)^(?=.*(?:香港|hong ?kong|hk|🇭🇰)).*$", icon: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/release/icon/color/available.png" }
  - { name: 美国均衡加速, <<: *rtt-lb, filter: "(?i)^(?=.*(?:🇺🇸|美国|US|unitedstates|united ?states|america|usa|洛杉矶|达拉斯|New ?York|西雅图)).*$", icon: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/release/icon/color/available.png" }

  # 🛡️ 国家智能容灾 fallback（用于断流/封锁自动切）
  - { name: 香港故转, <<: *rtt-fb, filter: "(?i)^(?=.*(?:香港|hong ?kong|hk|🇭🇰)).*$", icon: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/icon/color/asn.png" }
  - { name: 美国故转, <<: *rtt-fb, filter: "(?i)^(?=.*(?:🇺🇸|美国|US|unitedstates|united ?states|america|usa|洛杉矶|达拉斯|New ?York|西雅图)).*$", icon: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/icon/color/asn.png" }

  # 🧠 智能自动测速（可关闭 lazy 或自定义测速 URL）
  - { name: 香港自动, type: url-test, <<: *u_s, include-all: false, tolerance: 100, interval: 600, lazy: true, filter: "(?i)^(?=.*(?:香港|hong ?kong|hk|🇭🇰)).*$", icon: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/release/icon/color/auto.png" }
  - { name: 美国自动, type: url-test, <<: *u_s, include-all: false, tolerance: 100, interval: 600, lazy: true, filter: "(?i)^(?=.*(?:🇺🇸|美国|US|unitedstates|united ?states|america|usa|洛杉矶|达拉斯|New ?York|西雅图)).*$", icon: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/release/icon/color/auto.png" }

  - name: 自动选择
    type: url-test
    <<: *u_s
    url: https://cp.cloudflare.com/generate_204
    include-all: false
    tolerance: 50
    interval: 900 #安卓可用1800，也就是半小时
    lazy: false
    health-check:
      enable: true
      interval: 900
      url: https://cp.cloudflare.com/generate_204
      method: HEAD
      timeout: 5
      expected-status: '204'
    filter: "(?i)^((?!(DIRECTLY|DIRECT|Proxy|Traffic|Expire|Expired|过期|剩余|流量|官网|超时|失效|Invalid|Test|测速|本地|Local)).)*$"
    icon: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/icon/color/urltest.png" 

  # 📺 媒体平台
  - { name: TikTok, type: select, proxies: [美国均衡加速, 美国故转], icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/TikTok.png" }
  - { name: YouTube, type: select, <<: *pg, icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/YouTube.png" }
  - { name: Speedtest, type: select, proxies: [DIRECTLY, Device-Proxy, Proxy], icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Speedtest.png" }

  - { name: OneDrive, type: select, proxies: [DIRECTLY, Device-Proxy, Proxy], icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/OneDrive.png" }
  - { name: Trackerslist, type: select, proxies: [DIRECTLY, Device-Proxy, Proxy], icon: "https://github.com/DustinWin/ruleset_geodata/releases/download/icons/trackerslist.png" }

  # 🌍 区域节点直选（供 UI 手动切换）
  - { name: 香港节点, type: select, <<: *u, skip-cert-verify: true, include-all: true, filter: "(?i)^(?=.*(?:香港|hong ?kong|hk|🇭🇰)).*$", icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png" }
  - { name: 美国节点, type: select, <<: *u, skip-cert-verify: true, include-all: true, filter: "(?i)^(?=.*(?:🇺🇸|美国|US|unitedstates|united ?states|america|usa|洛杉矶|达拉斯|New ?York|西雅图)).*$", icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/United_States.png" }
  - { name: 日本节点, type: select, <<: *u, skip-cert-verify: true, include-all: true, filter: "(?i)^(?=.*(?:🇯🇵|日本|JP|japan|tokyo|osaka)).*$", icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Japan.png" }
  - { name: 新加坡节点, type: select, <<: *u, skip-cert-verify: true, include-all: true, filter: "(?i)^(?=.*(?:🇸🇬|新加坡|狮城|SG|Singapore)).*$", icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Singapore.png" }

#  - { name: 直连域名, type: select, proxies: [DIRECTLY, Device-Proxy, Proxy], icon: "https://github.com/DustinWin/ruleset_geodata/releases/download/icons/cn.png" }
  - { name: 全部节点, type: select, <<: *u, icon: "https://testingcf.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/World_Map.png", include-all: true, filter: "(?i)^((?!(DIRECTLY|DIRECT|Proxy|Traffic|Expire|Expired|过期|剩余|流量|官网|超时|失效|Invalid|Test|测速|本地|Local)).)*$" }
  - { name: 漏网之鱼, type: select, <<: *pg, icon: "https://testingcf.jsdelivr.net/gh/aihdde/Rules@master/icon/fish.png" }

# 规则匹配
rules:
  # 家宽链式代理
#  - DOMAIN-SUFFIX,example.org,家宽链式代理
#  - DOMAIN-SUFFIX,example.com,家宽链式代理
#  - DOMAIN-SUFFIX,example.org,家宽链式代理

  # 广告过滤
  - RULE-SET,AWAvenue_Ads_Rule,REJECT # 秋风
  - RULE-SET,blackmatrix7_ad,REJECT

  # 色情类拦截
#  - RULE-SET,porn,REJECT 

  # Tracker / BT 下载
  - RULE-SET,trackerslist,Trackerslist

  # Telegram
  - RULE-SET,telegram_domain,Telegram

  # AI
  - RULE-SET,ai,AI
  # 学术类
  - DOMAIN-SUFFIX,chat.openai.com,AI
  - DOMAIN-SUFFIX,deepl.com,AI
  - DOMAIN-SUFFIX,grammarly.com,AI
  - DOMAIN-SUFFIX,youglish.com,AI

  # 媒体
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,tiktok_domain,TikTok

  # 微软
  - RULE-SET,onedrive_domain,OneDrive

  # Speedtest
  - RULE-SET,speedtest_domain,Speedtest

  # Apple
  - RULE-SET,apple_cn_domain,DIRECTLY

  # macOS 访问域名走 mac 代理组
  - DOMAIN-SUFFIX,icloud.com,Device-Proxy
  - DOMAIN-SUFFIX,mac.com,Device-Proxy
  - DOMAIN-SUFFIX,itunes.apple.com,Device-Proxy
  - DOMAIN-SUFFIX,icloud-content.com,Device-Proxy

  # 安卓常用域名走 android 代理组
  # 国内部分
  - DOMAIN-SUFFIX,mi.com,DIRECTLY
  - DOMAIN-SUFFIX,miui.com,DIRECTLY
  - DOMAIN-SUFFIX,xiaomi.com,DIRECTLY
  - DOMAIN-SUFFIX,oneplus.cn,DIRECTLY
  - DOMAIN-SUFFIX,hicloud.com,DIRECTLY
  - DOMAIN-SUFFIX,huawei.com,DIRECTLY
  - DOMAIN-SUFFIX,vivo.com,DIRECTLY
  - DOMAIN-SUFFIX,oppo.com,DIRECTLY
  - DOMAIN-SUFFIX,meizu.com,DIRECTLY
  - DOMAIN-KEYWORD,wechat,DIRECTLY
  - DOMAIN-KEYWORD,alipay,DIRECTLY
  - DOMAIN-KEYWORD,unionpay,DIRECTLY
  - DOMAIN-SUFFIX,amap.com,DIRECTLY
  - DOMAIN-SUFFIX,dianping.com,DIRECTLY
  - DOMAIN-SUFFIX,meituan.com,DIRECTLY
  - DOMAIN-SUFFIX,baidu.com,DIRECTLY
  - DOMAIN-SUFFIX,bilibili.com,DIRECTLY
  - DOMAIN-SUFFIX,iqiyi.com,DIRECTLY
  - DOMAIN-SUFFIX,zhihu.com,DIRECTLY
  - DOMAIN-KEYWORD,xiami,DIRECTLY
  - DOMAIN-KEYWORD,autonavi,DIRECTLY
  - DOMAIN-SUFFIX,toutiao.com,DIRECTLY
  - DOMAIN-KEYWORD,tencent,DIRECTLY

  # 直连域名
  - DOMAIN-SUFFIX,julebu.co,DIRECTLY
  - RULE-SET,blackmatrix7_direct,DIRECTLY
  - RULE-SET,private_domain,DIRECTLY
  - RULE-SET,cn_domain,DIRECTLY
  - RULE-SET,cn_ip,DIRECTLY,no-resolve

  # Cloudflare 
  - RULE-SET,geoip_cloudflare,AI,no-resolve

  # 安卓 Google 服务及系统组件优化（确保代理）
  - DOMAIN-SUFFIX,googlevideo.com,Device-Proxy
  - DOMAIN-SUFFIX,googleapis.com,Device-Proxy
  - DOMAIN-SUFFIX,gstatic.com,Device-Proxy
  - DOMAIN-SUFFIX,ggpht.com,Device-Proxy
  - DOMAIN-SUFFIX,play.googleapis.com,Device-Proxy
  - DOMAIN-KEYWORD,android,Device-Proxy
  - DOMAIN-SUFFIX,ota.googlezip.net,Device-Proxy
  - DOMAIN-SUFFIX,update.googleapis.com,Device-Proxy
  - DOMAIN-SUFFIX,connectivitycheck.gstatic.com,DIRECTLY

  # Cloud Photo Backup / Google Photos 优化
  - DOMAIN-SUFFIX,photos.google.com,Device-Proxy
  - DOMAIN-SUFFIX,lh3.googleusercontent.com,Device-Proxy
  - DOMAIN-SUFFIX,photos.googleapis.com,Device-Proxy

  # Lineage OS
  - DOMAIN-KEYWORD,lineageos,Device-Proxy

  # 可选 geoip-no-resolve 类型
  - RULE-SET,geoip_cloudfront,DIRECTLY,no-resolve
  - RULE-SET,geoip_facebook,Proxy,no-resolve
  - RULE-SET,geoip_netflix,Proxy,no-resolve
  - RULE-SET,geoip_twitter,Proxy,no-resolve

  # 常规代理
  - RULE-SET,proxy,Proxy
#  - RULE-SET,proxylite,Proxy
  - RULE-SET,gfw_domain,Proxy
  - RULE-SET,geolocation-!cn,Proxy

  # 漏网之鱼
  - MATCH,漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
  yaml: &yaml {type: http, interval: 86400, behavior: domain, format: yaml}

rule-providers: 
  # 广告过滤
  AWAvenue_Ads_Rule: { <<: *yaml, path: ./ruleset/AWAvenue_Ads_Rule_Clash.yaml, url: "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main//Filters/AWAvenue-Ads-Rule-Clash.yaml" }
  blackmatrix7_ad: { <<: *yaml, path: ./ruleset/blackmatrix7_ad.yaml, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising.yaml" }

  # 色情类拦截
#  porn: { <<: *domain, path: ./ruleset/category-porn.mrs, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-porn.mrs" }

  # fake-ip 过滤（根据平台兼容性选用一个）
  fake_ip_filter_DustinWin: { <<: *domain, path: ./ruleset/fake_ip_filter_DustinWin.mrs, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/fakeip-filter.mrs" }
  fake_ip_filter_juewuy: { <<: *class, path: ./ruleset/fake_ip_filter_juewuy.list, url: "https://github.com/juewuy/ShellCrash/blob/dev/public/fake_ip_filter.list" }

  # 直连类规则
  blackmatrix7_direct: { <<: *yaml, path: ./ruleset/blackmatrix7_direct.yaml, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.yaml" }
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs" }
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs" }
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs" }

  # BT 下载隐私类
  trackerslist: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/raw/refs/heads/mihomo-ruleset/trackerslist.mrs" }

  # 代理类规则
  proxy: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/proxy.mrs" }
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs" }
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs" }

  # 平台类规则
  # 学术类 
  ai: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ai.mrs" }

  # cloudflare
  cloudflare:
    <<: *domain
    url: https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cloudflare.mrs
  geoip_cloudflare: { <<: *ip, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cloudflare.mrs" }  # 可 no-resolve

  # 国外媒体
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs" }
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs" }
  geoip_netflix: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs" }  # 可 no-resolve
  geoip_twitter: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs" }  # 可 no-resolve
  geoip_facebook: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/facebook.mrs" }  # 可 no-resolve

  # Telegram
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs" }

  # Apple
  apple_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs" }

  # 微软
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs" }

  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs" }

  # 可选添加的 geoip 分类（如需细分 IP 层处理）
  geoip_cloudfront: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cloudfront.mrs" }  # 可 no-resolve
